# -*- coding: utf-8 -*-
"""helmetdetection.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1jWZw3i70xKbuWIjj60bNzOasYcknfR6x
"""

import cv2
import numpy as np
import os
from google.colab import drive
from google.colab.patches import cv2_imshow

drive.mount('/content/drive')

model_path = "/content/drive/MyDrive/Smarttraffic/helmet_detection/"


weights_path = os.path.join(model_path, "yolov3-helmet.weights")
config_path = os.path.join(model_path, "yolov3-helmet.cfg")
names_path = os.path.join(model_path, "helmet.names")

net = cv2.dnn.readNet(weights_path, config_path)


with open(names_path, "r") as f:
    classes = [line.strip() for line in f.readlines()]


layer_names = net.getLayerNames()
output_layers = [layer_names[i - 1] for i in net.getUnconnectedOutLayers()]


def detect_helmet_video(video_path, output_path):
    cap = cv2.VideoCapture(video_path)
    width = int(cap.get(3))
    height = int(cap.get(4))
    fps = int(cap.get(cv2.CAP_PROP_FPS))


    fourcc = cv2.VideoWriter_fourcc(*'mp4v')
    out = cv2.VideoWriter(output_path, fourcc, fps, (width, height))

    while cap.isOpened():
        ret, frame = cap.read()
        if not ret:
            break


        blob = cv2.dnn.blobFromImage(frame, 0.00392, (416, 416), swapRB=True, crop=False)
        net.setInput(blob)
        detections = net.forward(output_layers)


        boxes, confidences, class_ids = [], [], []
        for output in detections:
            for detection in output:
                scores = detection[5:]
                class_id = np.argmax(scores)
                confidence = scores[class_id]

                if confidence > 0.5:
                    center_x, center_y, w, h = map(int, detection[:4] * [width, height, width, height])
                    x = int(center_x - w / 2)
                    y = int(center_y - h / 2)

                    boxes.append([x, y, w, h])
                    confidences.append(float(confidence))
                    class_ids.append(class_id)


        indices = cv2.dnn.NMSBoxes(boxes, confidences, 0.5, 0.4)


        if len(indices) > 0:
          for i in indices.flatten():
            x, y, w, h = boxes[i]
            label = f"{classes[class_ids[i]]}: {confidences[i]:.2f}"

            color = (0, 255, 0) if class_ids[i] == 0 else (0, 0, 255)
            cv2.rectangle(frame, (x, y), (x + w, y + h), color, 2)
            cv2.putText(frame, label, (x, y - 10), cv2.FONT_HERSHEY_SIMPLEX, 0.5, color, 2)

        out.write(frame)

    cap.release()
    out.release()
    print(f" Processed video saved at: {output_path}")


input_video_path = "/content/drive/MyDrive/Smarttraffic/helmet_detection/input.mp4"
output_video_path = "/content/drive/MyDrive/Smarttraffic/helmet_detection/output.mp4"

detect_helmet_video(input_video_path, output_video_path)